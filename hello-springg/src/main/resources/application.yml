#logging:
#  level:
#    root: debug

# mybatis와 spring 연동을 위한 설정 config.xml 파일 위치를 알려줌
mybatis:
  config-location: classpath:mybatis/config.xml
  mapper-locations: classpath:com/ktdsuniversity/edu/**/*Mapper.xml
spring:
  servlet: 
    multipart:
      max-file-size: 100MB # 모든 사람 총합 최대. 1024(1 KB) * 1024 (1 MB) * 100 (100 MB)
      max-request-size: 10MB # 한 사람이 한번에 최대
  # template engine (JSP)의 위치를 설정
  # 설정 경로 : src/main/webapp 아래부터 작성
  mvc: # 템플릿 엔진이 어디에 있는지 설정 (당분간 안 건드려도 됨)
    view:
      prefix: /WEB-INF/views/ # 경로를 넣음 src/main/webapp/WEB-INF/views/
      suffix: .jsp # 확장자를 넣음
  datasource:
    url: jdbc:oracle:thin:@localhost:1521:XE
    driver-class-name: oracle.jdbc.driver.OracleDriver
    username: SPRING_BOOT
    password: 1234
  application:
    name: hello-springg

    
    
# hello-springg application의 별도 설정(Customize)
app: 
  multipart:
     whitelist: # 업로드 할떄마다 검사 (업로드할 수 있는 거 관리하는 게 더 작음)
      .txt,
      .yml,
      .html,
      .css, 
      text/html,
      image/png,
      image/gif,
      image/jpeg,
      image/tiff,
      application/pdf,
      application/x-tika-ooxml,
      application/zip,
      text/plain
     # 업로드 가능한 파일들의 목록 설정 (mime 타입, 확장자 바꿔도 안 바뀌는)
#    사용자가 업로드한 파일이 저장될 위치
#    base-dir: C:/uploadFiles
#     base-dir: /Users/
     base-dir: # 어디에서 동작될지 모름 
      windows: C:/uploadFiles
      macos: /Documents/uploadFiles
     # 파일명 난독화 설정
     obfuscation:
      # 파일명을 난독화할 것인지에 대한 여부
      enable: true 
      # 난독화를 할 때, 확장자를 가릴 것인지 아닌지에 대한 설정
      hide-ext: 
        enable: true # false로 하면 확장자 붙어서 저장됨


